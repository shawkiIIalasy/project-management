<?php

namespace App\Http\Controllers\Api;

use App\Http\Requests\ProjectRequest;
use App\Models\Project;
use App\Traits\ApiResponser;
use Illuminate\Http\Request;
use Illuminate\Pagination\Paginator;
use Illuminate\Support\Facades\Gate;

class ProjectController extends ApiController
{
    use ApiResponser;

    public function callAction($method, $parameters)
    {
        return parent::callAction($method, $parameters); // TODO: Change the autogenerated stub
    }

    public function index()
    {
        $projects = Project::paginate(request()->all());

        return $this->success($projects, 200);
    }

    public function show($id)
    {
        $project = Project::find($id);
        if (empty($project)) {
            return $this->error('Project not exists.', 403);
        }
        $users = collect($project->users)->pluck('email', 'id');

        return $this->success(['project' => $project, 'users' => $users]);
    }

    public function store(ProjectRequest $request)
    {
        $attr = $request->validated();

        $attr['created_by_user_id'] = auth()->user()->id;

        Project::create($attr);

        return $this->success([], 'Project created.', 201);
    }

    public function update($id, ProjectRequest $request)
    {
        $attr = $request->validated();

        $project = Project::find($id);
        if ($project->update($attr)) {
            $project->users()->attach($request->get('users'));
        }

        return $this->success($project, 'Project updated.', 200);
    }
}
